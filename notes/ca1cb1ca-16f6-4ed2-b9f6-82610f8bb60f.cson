createdAt: "2019-10-23T17:03:20.945Z"
updatedAt: "2019-10-24T03:10:10.363Z"
type: "MARKDOWN_NOTE"
folder: "c37e1d68ae43af6fec7a"
title: "爬虫基本原理"
tags: []
content: '''
  # 爬虫基本原理
  
  简单讲就是请求网站并提取数据的自动化程序
      
  ## 爬虫的流程
  1. **发送请求**---通过HTTP库向目标站点发送请求，即发送一个Request，请求可以包含额外的headers等信息，等待服务器响应
  2. **获取响应内容**---如果服务器正常响应，会得到一个Response，Response的内容便是所要获取的页面内容，类型可能有HTML，Json字符串，二进制数据（如图片视频）等类型
  3. **解析内容**---得到的内容可能是HTML，可以用正则表达式、网页解析库进行解析，可能是Json，可以直接转换为Json对象解析，可能是二进制数据，可以保存或者进一步处理
  4. **保存数据**---保存形式多样，可以保存为文本，也可以保存至数据库，或者保存特定格式的文件
  
  ## Request和Response
      1. 浏览器发送信息给网址所在的服务器，这个过程叫做HTTP Request
      2. 服务器收到浏览器发送的消息后，能够根据浏览器发送消息的内容，做响应的处理，然后把消息传回给浏览器，这个过程叫做HTTP Response
      3. 浏览器收到服务器的Response信息后，会对信息做响应的处理，然后展示
  ### Request构成
  1. **请求方式**---主要由GET，POST两种类型，另外还有HEAD，PUT，DELETE，OPTIONS等
  2. **请求URL**---URL全称统一资源定位符，如一个网页文档、一张图片、一个视屏等都可以用URL唯一来确定
  3. **请求头**---包含请求时的头部信息，如User-Agent,Host,Cookies等信息
  4. **请求体**---请求时额外携带的数据，如表单提交时的表单数据(一般GET请求没有请求体)
  
  ### Response构成
  1. **响应状态**---有多重响应状态，如200代表成功，301跳转、404找不到页面、502服务器错误
  2. **响应头**---如内容类型、内容长度、服务器信息、设置Cookie等
  3. **响应体**---最重要的部分，包含了请求资源的内容，如网页HTML、图片、二进制数据等
  
  
  ## 解析方式
  1. 直接处理
  2. Json解析
  3. 正则表达式
  4. BeautifulSoup解析库
  5. PyQuery解析库
  6. XPath解析库
  
  
  ## 怎么解决JavaScript渲染问题？
  1. 分析Ajax请求
  2. 使用Selenium/WebDriver驱动浏览器
  3. Splash
  4. PyV8，Ghost.py
  
  ## 怎样保存数据
  1. **文本格式**---纯文本、Json、Xml等
  2. **关系型数据库**---如MySQL、Oracle、SQL Server等具有结构化表结构形式存储
  3. **非关系型数据库**---如MongoDB，Redis等key-value形式存储
  4. **二进制文件**---如图片、视屏、音频等直接保存成特定格式即可
'''
linesHighlighted: []
isStarred: false
isTrashed: false
